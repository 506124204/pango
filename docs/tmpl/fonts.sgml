<!-- ##### SECTION Title ##### -->
Fonts

<!-- ##### SECTION Short_Description ##### -->
Structures representing abstract fonts.

<!-- ##### SECTION Long_Description ##### -->
<para>
Pango supports a flexible architecture where a
particular rendering architecture can supply an
implementation of fonts. The #PangoFont structure
representn an abstract rendering-system-indepent font.
Pango provides routines to list available fonts, and
to load a font of a given description.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### STRUCT PangoFontDescription ##### -->
<para>
The #PangoFontDescription structure represents the description
of an ideal font. These structures are used both to list
what fonts are available on the system and also for specifying
the characteristics of a font to load.
</para>

@family_name: the name of the font family.
@style: the style (slant) of the font.
@variant: the variant (normal or small caps) of the font.
@weight: the weight (boldness) of the font.
@stretch: the relative width of the font.
@size: 

<!-- ##### ENUM PangoStyle ##### -->
<para>
</para>

@PANGO_STYLE_NORMAL: 
@PANGO_STYLE_OBLIQUE:
@PANGO_STYLE_ITALIC:

<!-- ##### ENUM PangoWeight ##### -->
<para>
An enumeration specifying the weight (boldness) of a font. This is a numerical
value ranging from 100 to 900, but there are two predefined values:
</para>

@PANGO_WEIGHT_NORMAL: the default weight (= 400)
@PANGO_WEIGHT_BOLD: the bold weight (= 700)

<!-- ##### ENUM PangoVariant ##### -->
<para>
An enumeration specifying capitalization variant of the font.
</para>

@PANGO_VARIANT_NORMAL: A normal font.
@PANGO_VARIANT_SMALL_CAPS: A font with the lower case characters
  replaced by smaller variants of the capital characters.

<!-- ##### ENUM PangoStretch ##### -->
<para>
An enumeration specifying the width of the font relative to other designs
within a family.
</para>

@PANGO_STRETCH_ULTRA_CONDENSED: 
@PANGO_STRETCH_EXTRA_CONDENSED: 
@PANGO_STRETCH_CONDENSED: 
@PANGO_STRETCH_SEMI_CONDENSED: 
@PANGO_STRETCH_NORMAL: the normal width
@PANGO_STRETCH_SEMI_EXPANDED: 
@PANGO_STRETCH_EXPANDED: 
@PANGO_STRETCH_EXTRA_EXPANDED: 
@PANGO_STRETCH_ULTRA_EXPANDED: 

<!-- ##### FUNCTION pango_font_description_copy ##### -->
<para>

</para>

@desc: 
@Returns: 


<!-- ##### FUNCTION pango_font_description_compare ##### -->
<para>

</para>

@desc1: 
@desc2: 
@Returns: 


<!-- ##### FUNCTION pango_font_descriptions_free ##### -->
<para>

</para>

@descs: 
@n_descs: 


<!-- ##### FUNCTION pango_font_description_free ##### -->
<para>

</para>

@desc: 


<!-- ##### FUNCTION pango_font_description_from_string ##### -->
<para>

</para>

@str: 
@Returns: 


<!-- ##### FUNCTION pango_font_description_to_string ##### -->
<para>

</para>

@desc: 
@Returns: 


<!-- ##### STRUCT PangoFont ##### -->
<para>
The #PangoFont structure is used to represent
a font in a rendering-system-independent matter.
To create an implementation of a #PangoFont,
the rendering-system specific code should malloc
a larger structure that contains a nested
#PangoFont, fill in the klass member of
the nested #PangoFont with a pointer to
a appropriate #PangoFontClass, then call
pango_font_init() on the structure.
</para>
<para>
The #PangoFont structure contains one member
which the implementation fills in:
</para>

@parent_instance: 

<!-- ##### STRUCT PangoFontClass ##### -->
<para>
The #PangoFontClass structure contains the virtual
functions for an implementation of a a PangoFont.

It contains the following members:

<informaltable pgwide=1 frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="2*"><colspec colwidth="8*">
<tbody>

<row>
<entry>void (*destroy) (#PangoFont *font);</entry>
<entry>a function to free the font structure and associated resources.</entry>
</row>
</tbody></tgroup></informaltable>
</para>

@parent_class: 
@describe: a function to describe the characteristics of a font. See
           pango_font_describe().
@get_coverage: A function to get a coverage map for the font.
               See pango_font_get_coverage().
@find_shaper: A function to find the shaper for a particular character 
              point. See pango_font_find_shaper().
@get_glyph_extents: A function called to find out the logical and ink
                    extents of a glyph within the fonts. See
                    pango_font_get_glyph_extents().
@get_metrics: A function called to find the overall metric information
              for the font or the metric information appropriate to
              a particular language. See pango_font_get_metrics().

<!-- ##### STRUCT PangoFontMetrics ##### -->
<para>
The #PangoFontMetrics structure represents the overall metrics for
a font. It contains the following members:
</para>

@ascent: the logical extent of the font upwards from the baseline.
         The spacing between lines of text should be calculated
         as @ascent + @descent. Individual characters may have
         extents exceeding this value.
@descent: the logical extent of the font beneath the baseline.
         as @ascent + @descent. Individual characters may have
         extents exceeding this value.

<!-- ##### FUNCTION pango_font_find_shaper ##### -->
<para>

</para>

@font: 
@lang: 
@ch: 
@Returns: 
<!-- # Unused Parameters # -->
@char: 


<!-- ##### FUNCTION pango_font_describe ##### -->
<para>

</para>

@font: 
@Returns: 


<!-- ##### FUNCTION pango_font_get_coverage ##### -->
<para>

</para>

@font: 
@lang: 
@Returns: 


<!-- ##### FUNCTION pango_font_get_glyph_extents ##### -->
<para>

</para>

@font: 
@glyph: 
@ink_rect: 
@logical_rect: 


<!-- ##### FUNCTION pango_font_get_metrics ##### -->
<para>

</para>

@font: 
@lang: 
@metrics: 


<!-- ##### MACRO PANGO_TYPE_FONT ##### -->
<para>

</para>



<!-- ##### MACRO PANGO_FONT ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO PANGO_IS_FONT ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO PANGO_FONT_CLASS ##### -->
<para>

</para>

@klass: 


<!-- ##### MACRO PANGO_IS_FONT_CLASS ##### -->
<para>

</para>

@klass: 


<!-- ##### MACRO PANGO_FONT_GET_CLASS ##### -->
<para>

</para>

@obj: 


<!-- ##### FUNCTION pango_font_get_type ##### -->
<para>

</para>

@Returns: 


<!-- ##### STRUCT PangoFontMap ##### -->
<para>
The #PangoFontMap represents the set of fonts available for a
particular rendering system. This is a virtual object with
implementations being specific to particular rendering systems.  To
create an implementation of a #PangoFontMap, the rendering-system
specific code should malloc a larger structure that contains a nested
#PangoFontMap, fill in the klass member of the nested #PangoFontMap with a
pointer to a appropriate #PangoFontMapClass, then call
pango_font_map_init() on the structure.
</para>
<para>
The #PangoFont structure contains one member which the implementation fills in:
</para>

@parent_instance: 

<!-- ##### STRUCT PangoFontMapClass ##### -->
<para>
The #PangoFontMapClass structure holds the virtual functions for
a particular #PangoFontMap implementation.
</para>

@parent_class: 
@load_font: a function to load a font with a given description. See
            pango_font_map_load_font()
@list_fonts: A function to list available fonts. See pango_font_map_list_fonts()
@list_families: A function to list available font families. See
                pango_font_map_list_families().

<!-- ##### FUNCTION pango_font_map_load_font ##### -->
<para>

</para>

@fontmap: 
@desc: 
@Returns: 
<!-- # Unused Parameters # -->
@size: 


<!-- ##### FUNCTION pango_font_map_list_families ##### -->
<para>

</para>

@fontmap: 
@families: 
@n_families: 


<!-- ##### FUNCTION pango_font_map_free_families ##### -->
<para>

</para>

@families: 
@n_families: 


<!-- ##### FUNCTION pango_font_map_list_fonts ##### -->
<para>

</para>

@fontmap: 
@family: 
@descs: 
@n_descs: 


<!-- ##### MACRO PANGO_TYPE_FONT_MAP ##### -->
<para>

</para>



<!-- ##### MACRO PANGO_FONT_MAP ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO PANGO_IS_FONT_MAP ##### -->
<para>

</para>

@object: 


<!-- ##### MACRO PANGO_FONT_MAP_CLASS ##### -->
<para>

</para>

@klass: 


<!-- ##### MACRO PANGO_IS_FONT_MAP_CLASS ##### -->
<para>

</para>

@klass: 


<!-- ##### MACRO PANGO_FONT_MAP_GET_CLASS ##### -->
<para>

</para>

@obj: 


<!-- ##### FUNCTION pango_font_map_get_type ##### -->
<para>

</para>

@Returns: 


